{"uid":"5685d75ee9ad8cc2","name":"test_TC27_OB_Support_checkbox_checking","fullName":"tests.test_config_panelchecks#test_TC27_OB_Support_checkbox_checking","historyId":"7b9a3005b0c952dfd10a39e07855209a","time":{"start":1742478980677,"stop":1742478980677,"duration":0},"status":"broken","statusMessage":"selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_CONNECTION_REFUSED\n  (Session info: chrome=134.0.6998.90)\nStacktrace:\n\tGetHandleVerifier [0x00007FF7D324FE65+26629]\n\t(No symbol) [0x00007FF7D31B6030]\n\t(No symbol) [0x00007FF7D304931A]\n\t(No symbol) [0x00007FF7D3045D10]\n\t(No symbol) [0x00007FF7D30368C9]\n\t(No symbol) [0x00007FF7D3038638]\n\t(No symbol) [0x00007FF7D3036BD6]\n\t(No symbol) [0x00007FF7D3036656]\n\t(No symbol) [0x00007FF7D303631A]\n\t(No symbol) [0x00007FF7D3033E9F]\n\t(No symbol) [0x00007FF7D303478C]\n\t(No symbol) [0x00007FF7D304D16A]\n\t(No symbol) [0x00007FF7D30F102E]\n\t(No symbol) [0x00007FF7D30C7AAA]\n\t(No symbol) [0x00007FF7D30F0169]\n\t(No symbol) [0x00007FF7D30C7883]\n\t(No symbol) [0x00007FF7D3090550]\n\t(No symbol) [0x00007FF7D3091803]\n\tGetHandleVerifier [0x00007FF7D35A72DD+3529853]\n\tGetHandleVerifier [0x00007FF7D35BDA42+3621858]\n\tGetHandleVerifier [0x00007FF7D35B24F3+3575443]\n\tGetHandleVerifier [0x00007FF7D331B79A+860474]\n\t(No symbol) [0x00007FF7D31C08AF]\n\t(No symbol) [0x00007FF7D31BCBE4]\n\t(No symbol) [0x00007FF7D31BCD86]\n\t(No symbol) [0x00007FF7D31AC2E9]\n\tBaseThreadInitThunk [0x00007FFEE8F2E8D7+23]\n\tRtlUserThreadStart [0x00007FFEE957BF6C+44]","statusTrace":"@pytest.fixture(scope=\"module\")\n    def setup_teardown():\n        logging.info(\"Setting up the browser\")\n        browser = BrowserSetup()\n>       driver = browser.way1(URL)\n\ntest_config_panelchecks.py:145: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\utilities\\browser_setup.py:37: in way1\n    self.driver.get(url)\n..\\..\\..\\..\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:393: in get\n    self.execute(Command.GET, {\"url\": url})\n..\\..\\..\\..\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:384: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x000002BF17164CD0>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"unknown error\",\"message\":\"unknown error: net::ERR_CONNECTION_REFUSED\\\\n  ...07FF7D31AC2E9]\\\\n\\\\tBaseThreadInitThunk [0x00007FFEE8F2E8D7+23]\\\\n\\\\tRtlUserThreadStart [0x00007FFEE957BF6C+44]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_CONNECTION_REFUSED\nE         (Session info: chrome=134.0.6998.90)\nE       Stacktrace:\nE       \tGetHandleVerifier [0x00007FF7D324FE65+26629]\nE       \t(No symbol) [0x00007FF7D31B6030]\nE       \t(No symbol) [0x00007FF7D304931A]\nE       \t(No symbol) [0x00007FF7D3045D10]\nE       \t(No symbol) [0x00007FF7D30368C9]\nE       \t(No symbol) [0x00007FF7D3038638]\nE       \t(No symbol) [0x00007FF7D3036BD6]\nE       \t(No symbol) [0x00007FF7D3036656]\nE       \t(No symbol) [0x00007FF7D303631A]\nE       \t(No symbol) [0x00007FF7D3033E9F]\nE       \t(No symbol) [0x00007FF7D303478C]\nE       \t(No symbol) [0x00007FF7D304D16A]\nE       \t(No symbol) [0x00007FF7D30F102E]\nE       \t(No symbol) [0x00007FF7D30C7AAA]\nE       \t(No symbol) [0x00007FF7D30F0169]\nE       \t(No symbol) [0x00007FF7D30C7883]\nE       \t(No symbol) [0x00007FF7D3090550]\nE       \t(No symbol) [0x00007FF7D3091803]\nE       \tGetHandleVerifier [0x00007FF7D35A72DD+3529853]\nE       \tGetHandleVerifier [0x00007FF7D35BDA42+3621858]\nE       \tGetHandleVerifier [0x00007FF7D35B24F3+3575443]\nE       \tGetHandleVerifier [0x00007FF7D331B79A+860474]\nE       \t(No symbol) [0x00007FF7D31C08AF]\nE       \t(No symbol) [0x00007FF7D31BCBE4]\nE       \t(No symbol) [0x00007FF7D31BCD86]\nE       \t(No symbol) [0x00007FF7D31AC2E9]\nE       \tBaseThreadInitThunk [0x00007FFEE8F2E8D7+23]\nE       \tRtlUserThreadStart [0x00007FFEE957BF6C+44]\n\n..\\..\\..\\..\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:232: WebDriverException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"setup_teardown","time":{"start":1742478973880,"stop":1742478980374,"duration":6494},"status":"broken","statusMessage":"selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_CONNECTION_REFUSED\n  (Session info: chrome=134.0.6998.90)\nStacktrace:\n\tGetHandleVerifier [0x00007FF7D324FE65+26629]\n\t(No symbol) [0x00007FF7D31B6030]\n\t(No symbol) [0x00007FF7D304931A]\n\t(No symbol) [0x00007FF7D3045D10]\n\t(No symbol) [0x00007FF7D30368C9]\n\t(No symbol) [0x00007FF7D3038638]\n\t(No symbol) [0x00007FF7D3036BD6]\n\t(No symbol) [0x00007FF7D3036656]\n\t(No symbol) [0x00007FF7D303631A]\n\t(No symbol) [0x00007FF7D3033E9F]\n\t(No symbol) [0x00007FF7D303478C]\n\t(No symbol) [0x00007FF7D304D16A]\n\t(No symbol) [0x00007FF7D30F102E]\n\t(No symbol) [0x00007FF7D30C7AAA]\n\t(No symbol) [0x00007FF7D30F0169]\n\t(No symbol) [0x00007FF7D30C7883]\n\t(No symbol) [0x00007FF7D3090550]\n\t(No symbol) [0x00007FF7D3091803]\n\tGetHandleVerifier [0x00007FF7D35A72DD+3529853]\n\tGetHandleVerifier [0x00007FF7D35BDA42+3621858]\n\tGetHandleVerifier [0x00007FF7D35B24F3+3575443]\n\tGetHandleVerifier [0x00007FF7D331B79A+860474]\n\t(No symbol) [0x00007FF7D31C08AF]\n\t(No symbol) [0x00007FF7D31BCBE4]\n\t(No symbol) [0x00007FF7D31BCD86]\n\t(No symbol) [0x00007FF7D31AC2E9]\n\tBaseThreadInitThunk [0x00007FFEE8F2E8D7+23]\n\tRtlUserThreadStart [0x00007FFEE957BF6C+44]\n\n","statusTrace":"  File \"C:\\Users\\GRL\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\pluggy\\_callers.py\", line 167, in _multicall\n    teardown.throw(outcome._exception)\n    ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\GRL\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\_pytest\\setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"C:\\Users\\GRL\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\pluggy\\_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n  File \"C:\\Users\\GRL\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\_pytest\\fixtures.py\", line 1140, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"C:\\Users\\GRL\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\_pytest\\fixtures.py\", line 891, in call_fixture_func\n    fixture_result = next(generator)\n  File \"C:\\Users\\GRL\\PycharmProjects\\25W automation\\Project-24\\tests\\test_config_panelchecks.py\", line 145, in setup_teardown\n    driver = browser.way1(URL)\n  File \"C:\\Users\\GRL\\PycharmProjects\\25W automation\\Project-24\\utilities\\browser_setup.py\", line 37, in way1\n    self.driver.get(url)\n    ~~~~~~~~~~~~~~~^^^^^\n  File \"C:\\Users\\GRL\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 393, in get\n    self.execute(Command.GET, {\"url\": url})\n    ~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\GRL\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 384, in execute\n    self.error_handler.check_response(response)\n    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^\n  File \"C:\\Users\\GRL\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py\", line 232, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[],"attachments":[],"parameters":[],"hasContent":true,"attachmentsCount":0,"shouldDisplayMessage":true,"attachmentStep":false,"stepsCount":0}],"afterStages":[],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_config_panelchecks"},{"name":"host","value":"DESKTOP-GHENSD5"},{"name":"thread","value":"34292-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_config_panelchecks"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":[]},"source":"5685d75ee9ad8cc2.json","parameterValues":[]}